import { Internals } from '@configcat/sdk';
export { default as ConfigCatPlugin, type PluginOptions as ConfigCatPluginOptions } from './plugins/ConfigCatPlugin';
export { default as FeatureWrapper } from './components/FeatureWrapper.vue';
export declare const createConsoleLogger: typeof Internals.createConsoleLogger, createFlagOverridesFromMap: typeof Internals.createFlagOverridesFromMap, createFlagOverridesFromQueryParams: typeof Internals.createFlagOverridesFromQueryParams;
export type IQueryStringProvider = Internals.IQueryStringProvider;
export { PollingMode } from '@configcat/sdk';
export type { IAutoPollOptions, ILazyLoadingOptions, IManualPollOptions, IOptions } from '@configcat/sdk';
export { DataGovernance } from '@configcat/sdk';
export type { IConfigCatLogger, LogEventId, LogMessage } from '@configcat/sdk';
export { LogLevel } from '@configcat/sdk';
export { FormattableLogMessage } from '@configcat/sdk';
export type { IConfigCatCache } from '@configcat/sdk';
export type { ConditionTypeMap, ICondition, IConditionUnion, IConfig, IPercentageOption, IPrerequisiteFlagCondition, ISegment, ISegmentCondition, ISetting, ISettingUnion, ISettingValueContainer, ITargetingRule, IUserCondition, IUserConditionUnion, SettingTypeMap, SettingValue, UserConditionComparisonValueTypeMap, VariationIdValue } from '@configcat/sdk';
export { PrerequisiteFlagComparator, SegmentComparator, SettingType, UserComparator } from '@configcat/sdk';
export type { IConfigCatClient, IConfigCatClientSnapshot } from '@configcat/sdk';
export { SettingKeyValue } from '@configcat/sdk';
export type { IEvaluationDetails, SettingTypeOf } from '@configcat/sdk';
export type { UserAttributeValue } from '@configcat/sdk';
export { User } from '@configcat/sdk';
export type { FlagOverrides } from '@configcat/sdk';
export { OverrideBehaviour } from '@configcat/sdk';
export { ClientCacheState, RefreshResult } from '@configcat/sdk';
export type { HookEvents, IProvidesHooks } from '@configcat/sdk';
export { ConfigJson } from '@configcat/sdk';
